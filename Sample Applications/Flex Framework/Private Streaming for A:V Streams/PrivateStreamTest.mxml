<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="1100" height="500" 
	xmlns:rtc="http://ns.adobe.com/rtc" applicationComplete="onCreationComplete()">
	<mx:Script>
		<![CDATA[
			import com.adobe.rtc.events.SessionEvent;
			import mx.managers.PopUpManager;
			import mx.core.IFlexDisplayObject;
		
			
			import com.adobe.rtc.sharedManagers.descriptors.UserDescriptor;
			import mx.controls.Alert;
			
			/**********************************************************
			 * This example demonstrates the newly added Private Stream Feature. 
			 * We have a new property called recipients inside Audio/Camera Publishers 
			 * that stores an array of userIDs to be sent the private message to. The default value 
			 * is null, meaning send to everyone. You can't change this property i.e. list of users you are sending private streams to 
			 * while you are already publishing your stream. You need to stop your stream, set the recipient IDs and then again 
			 * call publish methods. A owner can enable/disable private streaming in a room. By default, it is disabled.
			 * You can only send private streams to an user or group of users if private streaming is enabled.
			 * This example allows you to select a group of users and send them your streams. Receiving users will only see 
			 * that stream and will not know whom else the stream was sent to. The example also shows list of users who are getting
			 * your private audio/camera streams.
			 * For sending private stream to just one user, have just one user ID to the recipients array.
			 * *********************************/
			 
			 /**********************************************************
			  * ADOBE SYSTEMS INCORPORATED
			  * Copyright [2007-2010] Adobe Systems Incorporated
			  * All Rights Reserved.
			  * NOTICE: Adobe permits you to use, modify, and distribute this file in accordance with the 
			  * terms of the Adobe license agreement accompanying it.If you have received this file from a 
			  * source other than Adobe, then your use, modification, or distribution of it requires the prior 
			  * written permission of Adobe.
		     	  * *********************************/
			
			private const applicationTitle:String = "LCCS Sample Application";
			
			
			private function onClick(event:MouseEvent):void
			{
				if ( btn.label == "Start" ) {
					webcamPub.publish();
					btn.label = "Stop" ;
				}else if ( btn.label == "Stop") {
					webcamPub.stop();
					btn.label = "Start" ;
				}
			}
			
			
			private function onCreationComplete():void
			{
				popup(loginWindow);
				cSession.addEventListener(SessionEvent.SYNCHRONIZATION_CHANGE, onEventNotification);
			}
			
			private function popup(window:IFlexDisplayObject):void
			{
				PopUpManager.addPopUp(window, this, true);
				PopUpManager.centerPopUp(window);
				window.visible = true;
			}

			/**
			 * Process LCCS Events
			 */
			private function onEventNotification(p_event:Event):void
			{
				if (p_event.type == SessionEvent.SYNCHRONIZATION_CHANGE) {
					if (cSession.isSynchronized) {
						panel.title = "Connected to room " + cSession.roomURL;
						PopUpManager.removePopUp(loginWindow);
						if ( cSession.userManager.myUserRole == 100 ) {
							cSession.roomManager.autoPromote = true ;
						}
						
					} 
				}
			}
			
			
			private function listLabelFunction(p_object:Object):String
			{
				var roleString:String ;


				if ( p_object is String ) {
					return p_object as String;
				}				

				if ( p_object.role == 10 ) {
					roleString = "Viewer" ;
				}else if ( p_object.role == 50 ) {
					roleString = "Publisher" ;
				}else if (p_object.role == 100 ) {
					roleString = "Owner" ;
				}
				
				if ( p_object.userID == cSession.userManager.myUserID ) {
					return  "*" + p_object.displayName + " : " + roleString ;
				}
				
				return  p_object.displayName + " : " + roleString ;
			}
			
			
			private function onEveryoneAudioClick():void
			{
				if (audioPub.recipientIDs != null ) {
					mx.controls.Alert.show("User is having a set of recipients for Audio.\n Set recipients to null before sending everyone");
					return ;
				}
				
				audioPub.recipientIDs = null ;
				audioPub.publish();
				audioList.visible = false ;
			}
			
			private function onEveryoneWebcamClick():void
			{
				if (webcamPub.recipientIDs != null ) {
					mx.controls.Alert.show("User is having a set of recipients for Webcam.\n Set recipients to null before sending everyone");
					return ;
				}
				
				webcamPub.recipientIDs = null ;
				webcamPub.publish();
				camList.visible = false ;
				
			}
			
			private function onPrivateAudioClick():void
			{
				if ( userList.selectedItems.length == 1 && (userList.selectedItem as UserDescriptor).userID == cSession.userManager.myUserID ) {
					mx.controls.Alert.show("Select at least one user other than yourself.");
					return ;
				}
				
				var selectedUsers:Array = userList.selectedItems ; 
				var recipientIDs:Array = new Array();
				var userNames:Array = new Array();
				
				for ( var i:int = 0 ; i < selectedUsers.length ; i++ ) {
					// I don't need to add my UserID as private stream item also come back to myself anyways.
					// Private stream item goes to the list of recipients as well as myself. Adding myuserID or not doesnt make any difference.
					if ( (selectedUsers[i] as UserDescriptor).userID != cSession.userManager.myUserID ) {
						recipientIDs.push((selectedUsers[i] as UserDescriptor).userID);
						userNames.push((selectedUsers[i] as UserDescriptor).displayName);
					}
				}
				
				audioPub.recipientIDs = recipientIDs ;
				audioPub.publish();
				audioList.dataProvider = userNames ;
				audioList.visible = true ;
				
			}
			
			private function onPrivateWebcamClick():void
			{
				
				if ( userList.selectedItems.length == 1 && (userList.selectedItem as UserDescriptor).userID == cSession.userManager.myUserID ) {
					mx.controls.Alert.show("Select at least one user other than yourself.");
					return ;
				}
				
				var selectedUsers:Array = userList.selectedItems ; 
				var recipientIDs:Array = new Array();
				
				var userNames:Array = new Array();
				
				for ( var i:int = 0 ; i < selectedUsers.length ; i++ ) {
					// I don't need to add my UserID as private stream item also come back to myself anyways.
					// Private stream item goes to the list of recipients as well as myself. Adding myuserID or not doesnt make any difference.
					//if ( (selectedUsers[i] as UserDescriptor).userID != cSession.userManager.myUserID ) {
						recipientIDs.push((selectedUsers[i] as UserDescriptor).userID);
						userNames.push((selectedUsers[i] as UserDescriptor).displayName);
						
					//}
				}
				
				webcamPub.recipientIDs = recipientIDs ;
				webcamPub.publish();
				camList.dataProvider = userNames ;
				camList.visible = true ;
			}
			
			private function login():void
			{
				auth.userName = username.text;
				auth.password = passwordBox.visible ? password.text : null;
				cSession.roomURL = roomURL.text;	
				cSession.login();
			}
			
			
			private function onAllowPrivateStreamClick():void
			{
				
				if ( allowPrivateStream.label == 'Stop Private Streams' ) {
					allowPrivateStream.label =  'Allow Private Streams' ;
				}else {
					allowPrivateStream.label = 'Stop Private Streams' 
				}
				cSession.streamManager.allowPrivateStreams = !cSession.streamManager.allowPrivateStreams ;
			}
			
			
				
		]]>
	</mx:Script>
	<rtc:RoomSettings id="myRoomSettings" roomBandwidth="auto" autoPromote="true" guestsMustKnock="false"/>
	<rtc:AdobeHSAuthenticator id="auth"  />
	<mx:Panel id="panel" title="{applicationTitle}" width="100%" height="100%" paddingLeft="5" paddingTop="5" paddingRight="5" paddingBottom="5">
	
		<!--
		 | Login Dialog Box
		 -->
		<mx:TitleWindow id="loginWindow" title="Connect to Room" visible="false">
			<mx:VBox>
				<mx:HBox>
					<mx:Label text="Room URL:" width="70"/>
					<mx:TextInput id="roomURL" width="295" tabIndex="1">
						<mx:text>Your RoomUrl</mx:text>
					</mx:TextInput>
				</mx:HBox>
				<mx:HBox>
					<mx:Label text="Username:" width="70"/>
					<mx:TextInput id="username" tabIndex="2">
						<mx:text>Your Username</mx:text>
					</mx:TextInput>			
					<mx:Button label="Login" click="login()" width="126" tabIndex="4"/>
				</mx:HBox>
				<mx:HBox>
					<mx:HBox id="passwordBox">
					<mx:Label text="Password:" width="70"/>
					<mx:TextInput id="password" displayAsPassword="true" tabIndex="3">
						<mx:text>Your password</mx:text>
					</mx:TextInput>			
					</mx:HBox>
					<mx:RadioButton label="User" selected="true" click="passwordBox.visible = true"/>
					<mx:RadioButton label="Guest" click="passwordBox.visible = false"/>
				</mx:HBox>
			</mx:VBox>
		</mx:TitleWindow>

		<!--
		 | LCCS application UI wrapped in ConnectSession
		 -->		
		<rtc:ConnectSessionContainer id="cSession" authenticator="{auth}" width="100%"  autoLogin="false" 
				height="100%"  initialRoomSettings="{myRoomSettings}" >
			 <mx:VBox width="100%" height="100%" >
				<mx:HBox width="100%" height="100%"> 
					<mx:VBox width="70%" height="100%" horizontalAlign="center">
						<rtc:AudioPublisher id="audioPub" />
						<rtc:AudioSubscriber id="audioSub" />
						<rtc:WebcamPublisher id="webcamPub" />
						<rtc:WebcamSubscriber width="100%" height="100%" webcamPublisher="{webcamPub}" />
					</mx:VBox>
					<mx:VBox width="30%" height="100%">
						<mx:Label text="All User List" />
						<mx:List id="userList" height="100%" width="100%" 
							dataProvider="{cSession.userManager.userCollection}" backgroundColor="0xcccccc" allowMultipleSelection="true" labelField="displayName" 
							fontWeight="bold"  fontSize="14"  />
						<mx:Label text="Private Audio Recipient List" />
						<mx:List id="audioList" height="100%" width="100%" 
							 backgroundColor="0xcccccc" allowMultipleSelection="true" toolTip="This List contains List of users you are privately sharing your audio with." 
							fontWeight="bold"  fontSize="14" visible="false"  />
						<mx:Label text="Private Camera Recipient List" />
						<mx:List id="camList" height="100%" width="100%" 
							 backgroundColor="0xcccccc" allowMultipleSelection="true" toolTip="This List contains List of users you are privately sharing your camera with." 
							fontWeight="bold" labelFunction="listLabelFunction" fontSize="14" visible="false"  />
					</mx:VBox>
				</mx:HBox>
				<mx:HBox height="40" width="100%" horizontalAlign="center">
					<mx:Button label="Send Everyone Audio" id="audioBtn" click="onEveryoneAudioClick()" height="30" />
					<mx:Button label="Send Everyone Webcam" id="btn" click="onEveryoneWebcamClick()" height="30" />
					<mx:Button label="Send Private Audio" id="privateAudioBtn" click="onPrivateAudioClick()" height="30" enabled="{userList.selectedItem!= null }" />
					<mx:Button label="Send Private Webcam" id="privateWebcamBtn" click="onPrivateWebcamClick()" height="30" enabled="{userList.selectedItem!= null }"/>
					<mx:Button label="{cSession.streamManager.allowPrivateStreams ? 'Stop Private Streams' : 'Allow Private Streams'}" id="allowPrivateStream" click="onAllowPrivateStreamClick()" visible="{cSession.userManager.myUserRole>=100}" height="30"  />
					<mx:Button label="Stop My Audio" click="{audioPub.stop();audioList.visible=false;}"  height="30" enabled="{audioPub.isPublishing}"/>  
					<mx:Button label="Stop My Camera" click="{webcamPub.stop();camList.visible=false;}"  height="30" enabled="{webcamPub.isPublishing}"/>  
				</mx:HBox>
			</mx:VBox>
		</rtc:ConnectSessionContainer>
	</mx:Panel>
</mx:Application>
